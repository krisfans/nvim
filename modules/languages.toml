
[[pluings]]
repo = 'krisfans/vim-cpp-enhanced-highlight'
on_ft = ['c','cpp']
[[pluings]]
repo = 'jackguo380/vim-lsp-cxx-highlight'
on_ft = ['c','cpp']

[[plugins]]
repo = 'vim-python/python-syntax'
on_ft = 'python'
hook_source = '''
let g:python_highlight_all = 1
'''
[[plugins]]
repo = 'vim-scripts/python_match.vim'
on_ft = 'python'

[[plugins]]
repo = 'lervag/vimtex'
on_ft = 'tex'
hook_source = '''
function! SetServerName()
    if has('win32')
        let nvim_server_file = $TEMP . "/curnvimserver.txt"
    else
        let nvim_server_file = "/tmp/curnvimserver.txt"
    endif
    let cmd = printf("echo %s > %s", v:servername, nvim_server_file)
    call system(cmd)
endfunction

augroup vimtex_common
    autocmd!
    autocmd FileType tex call SetServerName()
augroup END

if has('nvim')
	let g:vimtex_compiler_progname = 'nvr'
endif
if executable('SumatraPDF.exe')
	let g:vimtex_view_general_viewer = 'SumatraPDF.exe'
	let g:vimtex_view_general_options = '-reuse-instance @pdf'
	let g:vimtex_view_general_options_latexmk = '-reuse-instance'
else
	let g:vimtex_view_general_viewer = 'zathura'
	let g:vimtex_view_method = 'zathura'
endif
let g:vimtex_compiler_method = 'latexmk'
let g:vimtex_compiler_latexmk = {
	\ 'background': 1,
	\ 'build_dir': '',
	\ 'callback': 1,
	\ 'continuous': 0,
	\ 'executable': 'latexmk',
	\ 'options': [
	\     '-shell-escape',
	\     '-file-line-error',
	\     '-synctex=1',
	\     '-interaction=nonstopmode',
	\ ],
	\ }
let g:vimtex_compiler_latexmk_engines = {
	\ '_'        : '-xelatex',
	\ 'xelatex'  : '-xelatex',
	\ 'pdflatex' : '-pdf',
	\ }
" 隐藏模式"
set conceallevel=0
let g:tex_conceal = ''
let g:vimtex_syntax_conceal_default = 0

"nmap <space>k <plug>(vimtex-doc-package)
"     Esc或q退出目录
"     Space跳转
"     Enter跳转并关闭目录

" \li查看latex项目信息，按Esc或q退出
" \lm查看内置的imaps
"
" TOC settings
let g:vimtex_toc_config = {
	\ 'name' : 'TOC',
	\ 'layers' : ['content', 'include'],
	\ 'show_help' : 1,
	\ 'show_numbers' : 1,
	\ 'mode' : 2,
	\ 'split_width' : 30,
	\ 'split_pos' : 'vert botright',
	\ }


" augroup vime_vimtex_group
" autocmd!
" autocmd FileType tex setl tw=80 fo+=tmM fo-=l spell spelllang=nl,en_gb
" autocmd FileType tex setl fo+=t
" autocmd FileType tex setl fo-=l
" autocmd FileType tex setl fo+=mM
" autocmd FileType tex setl spell
" autocmd FileType tex setl spelllang=nl,en_gb
" " autocmd FileType tex setl conceallevel=0
" augroup END
augroup vimtex_group
	autocmd FileType tex setl nospell
	autocmd FileType tex set syn=tex
augroup END

'''


[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
on_ft = ['markdown', 'pandoc.markdown', 'rmd']
build ='sh -c "cd app && npm install"'
[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = 'markdown'
hook_add = '''
let g:vim_markdown_folding_level = 1
let g:vim_markdown_folding_style_pythonic = 1
let g:vim_markdown_frontmatter = 1
let g:vim_markdown_auto_insert_bullets = 1
let g:vim_markdown_new_list_item_indent = 0
let g:vim_markdown_conceal_code_blocks = 0
let g:vim_markdown_conceal = 0
let g:vim_markdown_strikethrough = 1
let g:vim_markdown_edit_url_in = 'vsplit'
let g:vim_markdown_fenced_languages = [
	\ 'c++=cpp',
	\ 'viml=vim',
	\ 'bash=sh',
	\ 'ini=dosini',
	\ 'js=javascript',
	\ 'json=javascript',
	\ 'jsx=javascriptreact',
	\ 'tsx=typescriptreact',
	\ 'docker=Dockerfile',
	\ 'makefile=make',
	\ 'py=python'
	\ ]
'''

