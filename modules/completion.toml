[[plugins]]
repo = 'neovim/nvim-lspconfig'
on_event = ['BufReadPre','BufNewFile']
hook_source ='''
lua require('lsp')
'''
[[plugins]]
repo = 'hrsh7th/nvim-compe'
on_event = 'InsertEnter'
hook_source = '''
let g:compe = {}
let g:compe.autocomplete = v:true
let g:compe.debug = v:false
let g:compe.min_length = 0
let g:compe.preselect = 'enable'
let g:compe.throttle_time = 80
let g:compe.source_timeout = 200
let g:compe.incomplete_delay = 400
let g:compe.max_abbr_width = 100
let g:compe.max_kind_width = 100
let g:compe.max_menu_width = 100
let g:compe.documentation = v:true

let g:compe = {}
let g:compe.enabled = v:true
let g:compe.source = {
  \ 'path': {'ignored_filetypes': ['clap_input']},
  \ 'buffer': {'ignored_filetypes': ['clap_input']},
  \ 'ultisnips': {'ignored_filetypes': ['clap_input']},
  \ }

let g:compe.source.calc = v:false
let g:compe.source.nvim_lsp = v:true
let g:compe.source.nvim_lua = v:true
let g:compe.source.vsnip = v:true
highlight link CompeDocumentation NormalFloat
inoremap <silent><expr> <C-Space> compe#complete()
inoremap <silent><expr> <CR>      compe#confirm('<CR>')
inoremap <silent><expr> <C-e>     compe#close('<C-e>')
inoremap <silent><expr> <C-f>     compe#scroll({ 'delta': +4 })
inoremap <silent><expr> <C-d>     compe#scroll({ 'delta': -4 })

'''

[[plugins]]
repo = 'hrsh7th/vim-vsnip'
on_event = 'InsertEnter'
hook_source = '''
let g:vsnip_snippet_dir = expand('~/.config/nvim/snips')
" Jump forward or backward
imap <expr> <Tab>   vsnip#jumpable(1)   ? '<Plug>(vsnip-jump-next)'      : '<Tab>'
smap <expr> <Tab>   vsnip#jumpable(1)   ? '<Plug>(vsnip-jump-next)'      : '<Tab>'
imap <expr> <S-Tab> vsnip#jumpable(-1)  ? '<Plug>(vsnip-jump-prev)'      : '<S-Tab>'
smap <expr> <S-Tab> vsnip#jumpable(-1)  ? '<Plug>(vsnip-jump-prev)'      : '<S-Tab>'
'''

[[plugins]]
repo = 'hrsh7th/vim-vsnip-integ'
on_event = 'InsertEnter'

[[plugins]]
repo = 'windwp/nvim-autopairs'
on_event = 'InsertEnter'
hook_source = '''
lua << EOF
--require('nvim-autopairs').setup()
require('nvim-autopairs').setup()
local Rule = require('nvim-autopairs.rule')
local remap = vim.api.nvim_set_keymap
local npairs = require('nvim-autopairs')
-- you can use some builtin condition
local cond = require('nvim-autopairs.conds')
npairs.add_rules({
  Rule("$", "$",{"tex", "latex"})
    -- don't add a pair if  the previous character is xxx
    :with_pair(cond.not_before_regex_check("xxx", 3))
     }
)
EOF
'''

[[plugins]]
repo = 'krisfans/friendly-snippets'
on_event = 'InsertEnter'



