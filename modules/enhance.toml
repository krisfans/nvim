[[plugins]]
repo = 'Shougo/dein.vim'
[[plugins]]
repo = 'wsdjeg/dein-ui.vim'
on_cmd = 'DeinUpdate'

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
on_event = ['BufReadPre', 'BufNewFile']
hook_post_update = ':TSUpdate'
hook_source = '''
    lua require("treesitter")
'''
[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter-refactor'
depends = 'nvim-treesitter'

[[plugins]]
repo = 'andymass/vim-matchup'
on_event = ['BufReadPre','BufNewFile']

[[plugins]]
repo = 'nathom/filetype.nvim'
hook_add = 'let g:did_load_filetypes = 1'
# [[plugins]]
# repo = 'folke/trouble.nvim'
# [[plugins]]
# repo = 'luochen1990/rainbow'
# on_ft = [
#   'html',
#   'css',
#   'javascript',
#   'javascriptreact',
#   'go',
#   'python',
#   'lua',
#   'rust',
#   'vim',
#   'less',
#   'stylus',
#   'sass',
#   'scss',
#   'json',
#   'ruby',
#   'toml',
#   'tex',
# ]
# hook_source = '''
# let g:rainbow_active = 1
# '''
# [[plugins]]
# repo = 'voldikss/vim-floaterm'
# on_cmd = ['FloatermNew', 'FloatermToggle', 'FloatermPrev', 'FloatermNext', 'FloatermSend']
# hook_source= '''
# let g:floaterm_position = 'center'
# let g:floaterm_wintype = 'floating'

# " Set floaterm window's background to black
# hi Floaterm guibg=black
# " Set floating window border line color to cyan, and background to orange
# hi FloatermBorder guibg=none guifg=cyan
# '''


[[plugins]] # ÂÖ≥Èó≠bufferËÄå‰∏çÂÖ≥Èó≠Á™óÂè£
repo = 'rbgrouleff/bclose.vim'
on_map = 'Bclose'

[[plugins]]
repo = 'lukas-reineke/indent-blankline.nvim'
on_event = ['BufReadPre', 'BufNewFile']
hook_source = '''
    let g:indent_blankline_char = '‚îÇ'
    set colorcolumn=99999
    let g:indent_blankline_filetype_exclude = ['denite','startify','tagbar',
        \ 'vista_kind','vista','coc-explorer','dashboard', 'json','jsonc']
'''

[[plugins]] #Ê≥®Èáä
repo = 'tyru/caw.vim'
depends = 'context_filetype.vim'
on_map = { nx = '<Plug>' }

[[plugins]] # ÂáΩÊï∞Ë°®
repo = 'liuchengxu/vista.vim'
on_cmd = ['Vista', 'Vista!', 'Vista!!']
hook_source = '''
    source $VIM_PATH/config/vista.vim
'''


[[plugins]] #tags
repo = 'ludovicchabant/vim-gutentags'
if = 'executable("ctags")'
on_event = ['BufReadPost', 'BufWritePost']
hook_source = '''
let g:gutentags_cache_dir = $DATA_PATH . '/tags'
let g:gutentags_project_root = ['.root', '.git', '.svn', '.hg', '.project','go.mod']
let g:gutentags_generate_on_write = 1
let g:gutentags_generate_on_missing = 1
let g:gutentags_generate_on_new = 0
let g:gutentags_exclude_filetypes = [ 'defx', 'denite', 'vista', 'magit' ]
let g:gutentags_ctags_extra_args = ['--output-format=e-ctags']
let g:gutentags_ctags_exclude = ['*.json', '*.js', '*.ts', '*.jsx', '*.css', '*.less', '*.sass', '*.go', '*.dart', 'node_modules', 'dist', 'vendor']
'''
# [[plugins]] #Ê†ºÂºèÂåñ
# repo = 'Chiel92/vim-autoformat'
# on_cmd = 'Autoformat'
# hook_source = '''
# autocmd FileType vim,tex let b:autoformat_autoindent=0
# '''
[[plugins]] # Ê†ºÂºè‰ª£Á†Å
repo = 'sbdchd/neoformat'
on_cmd = 'Neoformat'
# hook_source = '''
# let g:neoformat_tex_latexindent = {
# \ 'exe': 'latexindent',
# \ 'args': ['-l'],
# \ 'stdin': 1
# \ }
# '''
[[plugins]] # ÂØπÈΩê
repo = 'junegunn/vim-easy-align'
on_map = '<Plug>(EasyAlign)'


# [[plugins]]
# repo = 'liuchengxu/vim-clap'
# merged = 0
# build = 'bash install.sh'
# on_map = { n = '<Plug>' }
# hook_source = '''
# source $VIM_PATH/config/clap.vim
# '''
# [[plugins]]
# repo = 'vn-ki/coc-clap'
# on_source = 'vim-clap'

[[plugins]]
repo = 'nvim-lua/plenary.nvim'
[[plugins]]
repo = 'nvim-telescope/telescope.nvim'
depends = 'nvim-web-devicons'
on_cmd = 'Telescope'
hook_source = '''
lua << EOF
require'telescope'.load_extension('mru')
require('telescope').setup({
    defaults = {
        prompt_prefix = "üîç"
    },
})
EOF
'''
[[plugins]]
repo = 'alan-w-255/telescope-mru.nvim'
on_source = 'telescope.nvim'
[[plugins]]
repo = 'yegappan/mru'
hook_source = '''
let g:MRU_File = $DATA_PATH . '/vim_mru_files'
'''

[[plugins]]
repo = 'Yggdroot/LeaderF'
hook_post_update = ':LeaderfInstallCExtension'
hook_source = '''
let g:Lf_StlColorscheme = 'gruvbox_material'
let g:Lf_CacheDirectory = $DATA_PATH
let g:Lf_StlSeparator = { 'left': "\ue0b0", 'right': "\ue0b2" }
'''
